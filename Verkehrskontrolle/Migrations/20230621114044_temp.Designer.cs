// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Verkehrskontrolle.Data;

#nullable disable

namespace Verkehrskontrolle.Migrations
{
    [DbContext(typeof(VerkehrskontrolleDbContext))]
    [Migration("20230621114044_temp")]
    partial class temp
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Verkehrskontrolle.Models.Fahrzeug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Antrieb")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fahrzeugtyp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HalterId")
                        .HasColumnType("int");

                    b.Property<string>("Kennzeichen")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Leistung")
                        .HasColumnType("int");

                    b.Property<int>("Sitze")
                        .HasColumnType("int");

                    b.Property<DateTime>("TüvDatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ZulassungDatum")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("HalterId");

                    b.ToTable("Fahrzeuge");
                });

            modelBuilder.Entity("Verkehrskontrolle.Models.Führerschein", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AnhängerErlaubnis")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Gültigkeit")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LKWErlaubnis")
                        .HasColumnType("bit");

                    b.Property<bool>("PKWErlaublnis")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Fuehrerscheine");
                });

            modelBuilder.Entity("Verkehrskontrolle.Models.Halter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FührerscheinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Geburtsdatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hausnummer")
                        .HasColumnType("int");

                    b.Property<string>("Nachname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ort")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Postleitzahl")
                        .HasColumnType("int");

                    b.Property<string>("Straße")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Vorname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("FührerscheinId");

                    b.ToTable("Halter");
                });

            modelBuilder.Entity("Verkehrskontrolle.Models.Fahrzeug", b =>
                {
                    b.HasOne("Verkehrskontrolle.Models.Halter", "Halter")
                        .WithMany()
                        .HasForeignKey("HalterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Halter");
                });

            modelBuilder.Entity("Verkehrskontrolle.Models.Halter", b =>
                {
                    b.HasOne("Verkehrskontrolle.Models.Führerschein", "Führerschein")
                        .WithMany()
                        .HasForeignKey("FührerscheinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Führerschein");
                });
#pragma warning restore 612, 618
        }
    }
}
